d3d12::sphere-renderer {
    string data_set = pos_rad_intensity : 10000 : 42 : 10 10 10 : 0.045 0.135; pos_rad_intensity : 1000000 : 42 : 10 10 10 : 0.01 0.03; pos_rad_intensity : 10000000 : 42 : 10 10 10 : 0.001 0.003; pos_rad_intensity : 100000 : 42 : 10 10 10 : 0.001 0.003; pos_rad_intensity : 100000 : 42 : 10 10 10 : 0.01 0.03; pos_rad_intensity : 100000 : 42 : 10 10 10 : 0.1 0.3; Assets/lasercross_frame112.mmpld; Assets/exp2mill_frame42.mmpld	
	uint32 frame = 0
	uint32vec2 viewport = 1920 1080; 2560 1440; 3840 2160
	boolean debug_view = false
	float32 global_radius = 0.07

	# Fixed tessellation factors for "sphere_tess" and "hemisphere_tess".
	float32vec4 edge_tess_factor = 4 4 4 4; 8 8 8 8; 16 16 16 16
	float32vec2 inside_tess_Factor = 4 4; 8 8; 16 16

	# Scaling of tessellation factor from "sphere" to "hemisphere" (and adaptive equivalents).
	float32 hemi_tess_scale = 0.5

	boolean conservative_depth = false
	boolean force_float_colour = false
	boolean vs_raygen = false
	boolean vs_xfer_function = true

	string method = sphere_tess; hemisphere_tess

	string manoeuvre = random
	uint32 manoeuvre_steps = 16
	uint32 iterations = 1
	uint32 manoeuvre_step = 0 -> 16

	uint32 min_wall_time = 5000
	uint32 min_prewarms = 8
	float32 prewarm_precision = 0.4
    uint32 gpu_counter_iterations = 8
}