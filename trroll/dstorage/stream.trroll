d3d12::stream-sphere-renderer {
    # V = 4/3 * pi * r^3 * N = D => r = (3 * D / 4 * pi * N)^(1/3)
    # N = 1000000 => r = (3 * 0.3 / 4 * pi * 1000000)^(1/3) = 0.0042
    # N = 10000000 => r = (3 * 0.3 / 4 * pi * 10000000)^(1/3) = 0.0019
    # N = 100000000 => r = (3 * 0.3 / 4 * pi * 100000000)^(1/3) = 0.0009
    # Particle stride = 3 * float + 1 * float + 4 * float = 8 * float = 32 B
    string data_set = pos_rad_rgba32 : 1000000 : 0 : 1 1 1 : 0.0021 0.0084; pos_rad_rgba32 : 10000000 : 0 : 1 1 1 : 0.00095 0.0038; pos_rad_rgba32 : 100000000 : 0 : 1 1 1 : 0.00045 0.0018
    float32 global_radius = 0.07
    uint32 frame = 0
    uint32 repeat_frame = 0; 3

    uint32 min_prewarms = 4
    uint32 min_wall_time = 1000

    string method = quad_inst
    boolean vs_raygen = false
    boolean vs_xfer_function = false

    string staging_directory = c:\_stage; t:\_stage
    uint32 batch_size = 128; 32000; 64000; 128000; 500000; 1000000; 5000000; 10000000
    uint32 batch_count = 16; 64; 256
    string implementation = batch_memory_mapping; dstorage; dstorage_memcpy; memory_mapping; persistent_memory_mapping; ram; read_file
    uint32 staging_buffer_size = 33554432; 268435456; 536870912

    uint32vec2 viewport = 1920 1080; 3840 2160
    boolean debug_view = false

    string manoeuvre = random
    uint32 manoeuvre_steps = 16
    uint32 manoeuvre_step = 0 -> 15
}
