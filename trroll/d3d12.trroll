#d3d12::empty {
#	boolean debug_view = true; false
#	float32vec4 clear_colour = 0.1 0.1 1.0 1.0; 0.0 0.0 0.0 0.0
#}

d3d12::sphere-renderer {
    #string data_set =  pos_rad_rgba32 : 200 : 0 : 10 10 10 : 0.01 0.1
    string data_set =  pos_rad_intensity : 20000 : 0 : 10 10 10 : 0.01 0.3
    uint32 frame = 0
    boolean debug_view = true
    float32 global_radius = 0.07

    # Adaptation range for "adapt_poly_tess", "adapt_sphere_tess" and "adapt_hemisphere_tess"
    uint32 adapt_tess_minimum = 4
    uint32 adapt_tess_maximum = 64
    float32 adapt_tess_scale = 2

    # Fixed tessellation factors for "sphere_tess" and "hemisphere_tess".
    float32vec4 edge_tess_factor = 16 16 16 16
    float32vec2 inside_tess_factor = 16 16

    # Fixed number of corners in polygon generated by "poly_tess".
    uint32 poly_corners = 6

    # Scaling of tessellation factor from "sphere" to "hemisphere" (and adaptive equivalents).
    float32 hemi_tess_scale = 0.5

    boolean conservative_depth = false
    boolean force_float_colour = false
    #boolean vs_raygen = true;false
    boolean vs_raygen = false
    boolean vs_xfer_function = true

    #string manoeuvre = orbit_x
    #string manoeuvre = orbit_y
    #string manoeuvre = orbit_z
    #string manoeuvre = orbit_-x
    #string manoeuvre = orbit_-y
    #string manoeuvre = orbit_-z
    #string manoeuvre = diagonal_x
    #string manoeuvre = diagonal_y
    #string manoeuvre = diagonal_z
    #string manoeuvre = path_x
    #string manoeuvre = path_y
    #string manoeuvre = path_z
    #string manoeuvre = path_sin_x
    #string manoeuvre = path_sin_y
    #string manoeuvre = path_sin_z
    #string manoeuvre = path_cos_x
    #string manoeuvre = path_cos_y
    #string manoeuvre = path_cos_z
    #string manoeuvre = random

    #string method = quad_inst; poly_tess; adapt_poly_tess; sphere_tess; adapt_sphere_tess; hemisphere_tess; adapt_hemisphere_tess; geo_quad; geo_poly; stpa
    #string method = quad_inst; poly_tess; adapt_poly_tess; geo_quad; stpa
    #string method = hemisphere_tess; geo_quad; stpa

    #string method = adapt_poly_tess
    #string method = poly_tess
    #string method = geo_poly
    #string method = quad_tess
    #string method = geo_quad
    #string method = quad_inst
    #string method = stpa
    #string method = adapt_hemisphere_tess
    #string method = adapt_sphere_tess
    #string method = hemisphere_tess
    #string method = sphere_tess

    uint32 iterations = 1
    uint32 manoeuvre_steps = 100

    #string manoeuvre = path_z
    #string manoeuvre = orbit_y
    string manoeuvre = orbit_y; path_z

    #uint32 manoeuvre_step = 0
    #uint32 manoeuvre_step = 0; 9; 19; 29; 39; 49; 59; 69; 79; 89; 99
    uint32 manoeuvre_step = 0;12;25;50; 99
    #uint32 manoeuvre_step = 29
}
